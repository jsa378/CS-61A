<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
		<title>Mutability</title>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reset.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reveal.css">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/theme/simple.css" id="theme">
		<link rel="stylesheet" href="../css/mono-blue.css">
		<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inconsolata|Roboto:300,400,500|Work+Sans:400,700">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.13.16/dist/katex.min.css" integrity="sha384-6LkG2wmY8FK9E0vU9OOr8UvLwsaqUg9SETfpq4uTCN1agNe8HRdE9ABlk+fVx6gZ" crossorigin="anonymous">
		<style>
			.reveal {
				font-family: "Work Sans", sans-serif;
			}

			.reveal .slides section {
				text-align: left;
				font-size: smaller;
			}

			.reveal pre {
				background-color: #f5f5f5;
				width: 100%;
				border: 1px solid #ccc;
				border-radius: 4px;
				box-shadow: none;
			}

			.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
				font-family: "Roboto", sans-serif;
				color: #0072c1;
			}

			.reveal section.heading-only {
				text-align:center;
				padding-top:20%;
			}

            .no-code-badge .code-badge {
                display: none;
            }

            .code-badge-language {
                display: none;
            }

			.python-tutor-link {
				font-size: smaller;
			}

			.python-tutor-link:before {
				content: "";
				display: block;
				background: url("http://pythontutor.com/favicon.ico") no-repeat;
				width: 48px;
				height: 48px;
				float: left;
				margin: 0 6px 0 0;
			}

			.reveal h3 {
				margin-bottom: 40px;
			}

            .smaller {
                font-size: smaller;
            }

            code {
                padding: 2px 4px;
                font-size: 90%;
                color: #0072c1;
                background-color: #f9f2f4;
                border-radius: 4px;
            }

            p.padded {
                margin-top: 32px;
            }

            section .row {
                display: flex;
            }

            section .column {
                flex: 48%;
                margin: 10px;
            }

			@media print
			{
				.no-print, .no-print *
				{
					display: none !important;
				}
			}


            .regex-input {
                border:1px solid rgb(204, 204, 204);
                background: rgb(245, 245, 245);
                padding: 8px;
            }

            .regex-input input {
                font-size: inherit;
            }

            .regex-input input[type=text]:invalid {
                background-color: pink;
            }

		</style>
        <style>
            .env-diagram {
                position: relative;
                font-family: monospace;
                font-size: 18px;
            }
            .env-diagram-frame table.table {
                margin: 0px;
            }
            .env-diagram .env-diagram-frame, .env-diagram .env-diagram-objects {
                width: 310px;
                border-left: 1px solid #aaa;
                margin-bottom: 15px;
                padding: 8px;
            }
            .env-diagram .env-diagram-frame.current {
                background: #e2ebf6;
            }
            .env-diagram .env-diagram-frame td, .env-diagram .env-diagram-objects td {
                font-size: smaller;
            }
            .env-diagram .env-diagram-connector {
                color: #005583;
            }
            .env-diagram .env-diagram-objects {
                float: right;
            }
            .env-diagram .env-diagram-objects ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }
            .env-diagram .env-diagram-objects td {
                width: 230px;
            }
            .env-diagram .env-diagram-objects .env-diagram-connector {
                margin-right: 8px;
            }
            .env-diagram .env-diagram-objects .env-diagram-trash {
                padding-top: 6px;
                margin-top: 12px;
            }
            .env-diagram .env-diagram-frame > div {
                margin-bottom: 10px;
            }
            .env-diagram .env-diagram-frame > div input {
                width: 90px;
            }
            .env-diagram .env-diagram-frame > div input:first-of-type {
                margin-right: 8px;
            }
            .env-diagram .env-diagram-frame table {
                margin-bottom: 0px;
            }
            .env-diagram .env-diagram-frame table input {
                width: 100px;
            }
            .env-diagram .env-diagram-frame table tbody td {
                padding: 2px;
                padding-right: 6px;
                height: 24px;
            }
            .env-diagram .env-diagram-frame table tbody td:first-child {
                text-align: right;
                width: 105px;
            }
            .env-diagram .env-diagram-frame table tbody td:nth-child(2) {
                width: 60px;
                border-left: 1px solid black;
                border-bottom: 1px solid black;
            }
            .env-diagram .env-diagram-frame .env-diagram-connector {
                margin-left: 12px;
            }
            .numbered-code ol {
                line-height: 1.7em;
                font-size: 1.0em;
                margin: 20px auto;
                width: 100%;
            }
            .numbered-code li {
                position: relative;
            }
            .numbered-code .line-arrow {
                position: absolute;
                right: 8px;
                bottom: 0px;
                font-size: 0.7em;
            }
            .numbered-code .line-current {
                color: blue;
            } 
            .numbered-code .line-previous {
                color: rgb(171, 171, 202);
            } 
        </style>
        <style>
        .circle-marker {
            position: absolute;
            background: blue;
            color: white;
            font-size: 20px;
            border-radius: 30px;
            width: 30px;
            height: 30px;
            text-align: center;
        }
        .circle-marker-arc {
            position: absolute;
            width: 60px;
            height: 90px;
            background: transparent;
            border-radius: 100px;
            border-left: 1px solid blue;
        }
        </style>
        <style>
        .bordered {
            border: 1px dashed blue;
            border-radius: 8px;
            padding: 6px;
            --balloon-font-size: 20px;
        }
        </style>
	</head>
	<body>
		<div class="reveal">
			<div class="slides">

				<section class="heading-only" style="padding-top:5%">
                    <h1>Mutability</h1>

					<div class="no-print" style="text-align: left; margin-top: 100px; font-size: 70%;">
						Tips for navigating the slides:
						<ul>
							<li>Press O or Escape for overview mode.</li>
							<li>Visit <a href="13-Mutability.html?print-pdf" target="_blank">this link</a> for a nice printable version</li>
							<li>Press the copy icon on the upper right of code blocks to copy the code</li>
						</ul>
                    </div>

                    <aside class="speaker-notes">
                    </aside>
				</section>

                <section>
                    <h3>Class outline:</h3>

                    <ul>
                        <li>List diagrams</li>
                        <li>Objects & methods
                        <li>List mutation & methods
                        <li>Tuples
                        <li>Mutability
                        <li>Beware of mutation
                    </ul>
                </section>


                <section class="heading-only">
                    <h2>List diagrams</h2>
                </section>

                <section>
                    <h3>Lists in environment diagrams</h3>
                    <p>Lists are represented as a row of index-labeled adjacent boxes, one per element.</p>

                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    pair = [1, 2]
                    </code></pre>
                    <img src="images/boxandpointer_pair.png" alt="PythonTutor for a single two-element list"/>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=pair%20%3D%20%5B1,%202%5D%0A%0A%23matrix%20%3D%20%5B%20%5B1,2,0,4%5D,%20%5B0,1,3,-1%5D,%20%5B0,0,1,8%5D%20%5D%0A%0A%23worst_list%20%3D%20%5B%20%5B1,%202%5D,%0A%23%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%5D,%0A%23%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%20%5B3,%20False,%20None%5D,%0A%23%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B4,%20lambda%3A%205%5D%5D%5D&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>
                </section>

                
				<section>
					<h3>Nested lists in environment diagrams</h3>

                    <p>Each box either contains a primitive value or points to a compound value.</p>

					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					matrix = [ [1, 2, 0, 4], [0, 1, 3, -1], [0, 0, 1, 8] ]
					</code></pre>
					<img src="images/boxandpointer_nestedlist.png" style="max-height:300px;" alt="Screenshot of PythonTutor of nested list">

                    <p class="python-tutor-link">
                        <a target="_blank" href="https://pythontutor.com/composingprograms.html#code=matrix%20%3D%20%5B%20%5B1,%202,%200,%204%5D,%20%5B0,%201,%203,%20-1%5D,%20%5B0,%200,%201,%208%5D%20%5D&cumulative=true&curInstr=1&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
                            View in PythonTutor
                        </a>
                    </p>

				</section>


                <section>
					<h3>Nested lists in environment diagrams</h3>

					<p>A <em>very</em> nested list:</p>
					<pre style="font-size:0.7em"><code data-trim data-noescape class="python">
					worst_list = [ [1, 2],
					               [],
					               [ [3, False, None], [4, lambda: 5]]]
					</code></pre>
                    <img src="images/boxandpointer_verynestedlist.png" style="max-height:300px;" alt="PythonTutor for a single two-element list"/>

                    <p class="python-tutor-link">
                        <a target="_blank" href="https://pythontutor.com/composingprograms.html#code=pair%20%3D%20%5B1,%202%5D%0A%0Anested_list%20%3D%20%5B%0A%20%20%20%20%5B1,%202%5D,%20%5B%5D,%0A%20%20%20%20%5B%20%5B3,%20False,%20None%5D,%0A%20%20%20%20%20%20%5B4,%20lambda%3A%205%5D%20%20%20%20%0A%20%20%20%20%5D%0A%5D&cumulative=true&curInstr=4&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
                            View in PythonTutor
                        </a>
                    </p>
				</section>

                <section class="heading-only">
                    <h2>Objects</h2>
                </section>

                <section>
                    <h3>Objects</h3>

                    <p>An <strong>object</strong> is a bundle of data and behavior.</p>

                    <p>A type of object is called a <strong>class</strong>.</p>

                    <p>Every value in Python is an object.</p>
                    <ul>
                        <li>All objects have attributes
                        <li>Objects often have associated methods
                    </ul>
                </section>

                <section>
                    <h3>Strings as objects</h3>
                    
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    name = 'PamelamaDingDong'
                    </code></pre>

                    <p class="padded">What kind of object is it?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    type(name)
                    </code></pre>

                    <p class="padded">What data is inside it?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    name[0]
                    name[8:]
                    </code></pre>

                    <p class="padded">What methods can we call?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    name.upper()
                    name.lower()
                    </code></pre>
                </section>



                <section>
                    <h3>Lists as objects</h3>
                    
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    names = ['Pamela', 'Spamela', 'Pammyla', 'Ela']
                    </code></pre>

                    <p class="padded">What kind of object is it?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    type(names)
                    </code></pre>

                    <p class="padded">What data is inside it?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    names[0]
                    names[-1]
                    </code></pre>

                    <p class="padded">What methods can we call?</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    names.index("Spamela")
                    names.copy()
                    </code></pre>
                </section>


				<section class="heading-only">
					<h2>List mutation</h2>
				</section>

				<section>
					<h3>Mutating lists with methods</h3>

					<p><code>append()</code> adds a single element to a list:</p>

					<pre style="font-size:0.6em"><code data-trim data-noescape class="python">
					s = [2, 3]
					t = [5, 6]
					s.append(4)
					s.append(t)
					t = 0
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=s%20%3D%20%5B2,%203%5D%0At%20%3D%20%5B5,%206%5D%0As.append%284%29%0As.append%28t%29%0At%20%3D%200&cumulative=true&curInstr=5&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>

					<br>

					<p class="padded"><code>extend()</code> adds all the elements in one list to a list:</p>

					<pre style="font-size:0.6em"><code data-trim data-noescape class="python">
					s = [2, 3]
					t = [5, 6]
					s.extend(4) <span class="fragment" data-fragment-index="1"># 🚫 Error: 4 is not an iterable!</span>
					s.extend(t)
					t = 0
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=s%20%3D%20%5B2,%203%5D%0At%20%3D%20%5B5,%206%5D%0As.extend%28t%29%0At%20%3D%200&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor. <span class="fragment" data-fragment-index="1">(After deleting the bad line)</span>
						</a>
					</p>

					<aside class="notes">
					</aside>
				</section>

				<section>
					<h3>Mutating lists with methods</h3>

					<p><code>pop()</code> removes and returns the last element:</p>

					<pre style="font-size:0.6em"><code data-trim data-noescape class="python">
					s = [2, 3]
					t = [5, 6]
					t = s.pop()
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=s%20%3D%20%5B2,%203%5D%0At%20%3D%20%5B5,%206%5D%0At%20%3D%20s.pop%28%29&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>
					<br>

					<p class="padded"><code>remove()</code> removes the first element equal to the argument:</p>

					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					s = [6, 2, 4, 8, 4]
					s.remove(4)
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=s%20%3D%20%5B6,%202,%204,%208,%204%5D%0As.remove%284%29&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>

					<aside class="notes">
						Try removing a list, too!
					</aside>
				</section>

                <section>
					<h3>Mutating lists with slicing</h3>

					<p>We can do a lot with just brackets/slice notation:</p>
					<pre style="font-size:0.6em"><code data-trim data-noescape class="python">
					L = [1, 2, 3, 4, 5]

					L[2] = 6

					L[1:3] = [9, 8]

					L[2:4] = []            # Deleting elements

					L[1:1] = [2, 3, 4, 5]  # Inserting elements

					L[len(L):] = [10, 11]  # Appending

					L = L + [20, 30]

					L[0:0] = range(-3, 0)  # Prepending
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=L%20%3D%20%5B1,%202,%203,%204,%205%5D%0A%0AL%5B2%5D%20%3D%206%0A%0AL%5B1%3A3%5D%20%3D%20%5B9,%208%5D%0A%0AL%5B2%3A4%5D%20%3D%20%5B%5D%20%20%20%20%20%20%20%20%20%20%20%20%23%20Deleting%20elements%0A%0AL%5B1%3A1%5D%20%3D%20%5B2,%203,%204,%205%5D%20%20%23%20Inserting%20elements%0A%0AL%5Blen%28L%29%3A%5D%20%3D%20%5B10,%2011%5D%20%20%23%20Appending%0A%0AL%20%3D%20L%20%2B%20%5B20,%2030%5D%0A%0AL%5B0%3A0%5D%20%3D%20range%28-3,%200%29%20%20%23%20Prepending&cumulative=true&curInstr=8&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>

				</section>

                <section class="heading-only">
                    <h2>Dictionary mutation</h2>
                </section>

				<section>
					<h3>Dictionary mutation</h3>

					<p>Starting with an empty dict:</p>
					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					users = {}
					</code></pre>
					<p class="padded">Add values:</p>
					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					users["profpamela"] = "b3stp@ssEvErDontHackMe"
					</code></pre>
					<p class="padded">Change values:</p>
					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					users["profpamela"] += "itsLongerSoItsMoreSecure!!"
					</code></pre>
					<pre style="font-size:0.8em"><code data-trim data-noescape class="python">
					>>> users["profpamela"]
					<span class="fragment">'b3stp@ssEvErDontHackMeitsLongerSoItsMoreSecure!!'</span>
					</code></pre>
				</section>
                
                <section class="heading-only">
                    <h2>Tuples</h2>
                </section>

                <section>
                    <h3>Tuples</h3>

                    <p>A <strong>tuple</strong> is an immutable sequence. It's like a list, but no mutation allowed!</p>

                    <p>An empty tuple:</p>
                    <pre style="font-size:0.6em"><code data-trim data-noescape class="python">
                    empty = ()
                    # or
                    empty = tuple()
                    </code></pre>

                    <p>A tuple with multiple elements:</p>
                    <pre style="font-size:0.6em"><code data-trim data-noescape class="python">
                    conditions = ('rain', 'shine')
                    # or
                    conditions = 'rain', 'shine'
                    </code></pre>

                    <p>A tuple with a single element: 🙀</p>
                    <pre style="font-size:0.6em" class="fragment"><code data-trim data-noescape class="python">
                    oogly = (61,)
                    # or
                    oogly = 61,
                    </code></pre>
                </section>

                <section>
                    <h3>Tuple operations</h3>

                    <p>Many of list's read-only operations work on tuples.</p>

                    <p class="padded">Combining tuples into a new tuple:</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    ('come', '☂') + ('or', '☼')  <span class="fragment"># ('come', '☂', 'or', '☼')</span>
                    </code></pre>

                    <p class="padded">Checking containment:</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    'wally' in ('wall-e', 'wallace', 'waldo')  <span class="fragment"># True</span>
                    </code></pre>

                    <p class="padded">Slicing:</p>
                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    rainbow = ('red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet')
                    roy = rainbow[:3]  <span class="fragment"># ('red', 'orange', 'yellow')</span>
                    </code></pre>
                </section>

                <section class="heading-only">
                    <h2>Immutability vs. Mutability</h2>
                </section>

				<section>
                    <h3>Immutable vs. Mutable</h3>

					<p style="font-size:smaller;">An <strong>immutable</strong> value is unchanging once created.</p>

					<p style="font-size:smaller;">Immutable types (that we've covered): int, float, string, tuple</p>

					<pre><code data-trim data-noescape class="python">
					a_tuple = (1, 2)
					a_tuple[0] = 3                  <span class="fragment" data-fragment-index="1"># 🚫 Error! Tuple items cannot be set.</span>
					a_string = "Hi y'all"
					a_string[1] = "I"               <span class="fragment" data-fragment-index="1"># 🚫 Error! String elements cannot be set.</span>
					a_string += ", how you doing?"  <span class="fragment" data-fragment-index="2"># 🤔 How does this work?</span>
					an_int = 20
					an_int += 2                     <span class="fragment" data-fragment-index="2"># 🤔 And this?</span>
					</code></pre>

					<p style="margin-top:32px; font-size:smaller;">A <strong>mutable</strong> value can change in value throughout the course of computation.
					All names that refer to the same object are affected by a mutation.
					</p>

					<p style="font-size:smaller;">Mutable types (that we've covered): list, dict</p>
					<pre><code data-trim data-noescape class="python">
					grades = [90, 70, 85]
					grades_copy = grades
					grades[1] = 100
					words = {"agua": "water"}
					words["pavo"] = "turkey"
					</code></pre>

					<aside class="notes">
					Show in code.cs61a.org terminal, use id()
					</aside>

				</section>

                <section>
                    <h3>Name change vs. mutation</h3>

                    <p>The value of an expression can change due to either changes in names <em>or</em> mutations in objects.</p>

                    <p>Name change:</p>
                    <pre style="font-size:0.6em"><code data-trim data-noescape class="python">
                    <span class="fragment" data-fragment-index="2">x = 2</span>
                    x + x <span class="fragment" data-fragment-index="2"># 4</span>

                    <span class="fragment" data-fragment-index="3">x = 3</span>
                    x + x <span class="fragment" data-fragment-index="3"># 6</span>
                    </code></pre>

                    <p>Object mutation:</p>
                    <pre style="font-size:0.6em"><code data-trim data-noescape class="python">
                    <span class="fragment" data-fragment-index="4">x = ['A', 'B']</span>
                    x + x  <span class="fragment" data-fragment-index="4"># ['A', 'B', 'A', 'B']</span>

                    <span class="fragment" data-fragment-index="5">x.append('C')</span>
                    x + x  <span class="fragment" data-fragment-index="5"># ['A', 'B', 'C', 'A', 'B', 'C']</span>
                    </code></pre>
                </section>

				<section>
					<h3>Mutables inside immutables</h3>

					<p>An immutable sequence may still change if it contains a mutable value as an element.</p>

					<pre style="font-size:1.0em;"><code data-trim data-noescape class="python">
					t = (1, [2, 3])
					t[1][0] = 99
					t[1][1] = "Problems"
					</code></pre>

					<p class="python-tutor-link">
						<a target="_blank" href="http://pythontutor.com/composingprograms.html#code=t%20%3D%20%281,%20%5B2,%203%5D%29%0At%5B1%5D%5B0%5D%20%3D%2099%0At%5B1%5D%5B1%5D%20%3D%20%22Problems%22&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
							Try in PythonTutor
						</a>
					</p>

				</section>


				<section>
					<h3>Equality of contents vs. Identity of objects</h3>

                    <pre style="font-size:0.7em;"><code data-trim data-noescape  class="python">
                    list1 = [1,2,3]
                    list2 = [1,2,3]
                    </code></pre>

					<p class="padded"><strong>Equality</strong>: <code>exp0 == exp1</code><br>
						<span style="font-size:smaller;">evaluates to <code>True</code>
						if both <code>exp0</code> and <code>exp1</code> evaluate to objects containing equal values</span></p>

                    <pre style="font-size:0.7em;"><code data-trim data-noescape  class="python">
                    list1 == list2  <span class="fragment"># True</span>
                    </code></pre>
                    <div class="fragment">
					<p class="padded"><strong>Identity</strong>: <code>exp0 is exp1</code><br>
						<span style="font-size:smaller;">evaluates to <code>True</code>
						if both <code>exp0</code> and <code>exp1</code> evaluate to the same object</span>
                        Identical objects always have equal values.
                    </p>

					<pre style="font-size:0.7em;"><code data-trim data-noescape  class="python">
					list1 is list2  <span class="fragment"># False</span>
					</code></pre>

					<p>
						<a class="python-tutor-link" target="_blank" href="http://pythontutor.com/composingprograms.html#code=list1%20%3D%20%5B1,2,3%5D%0Alist2%20%3D%20%5B1,2,3%5D%0A%0Aidentical%20%3D%20list1%20is%20list2%0Aare_equal%20%3D%20list1%20%3D%3D%20list2&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor.
						</a>
					</p>
                    </div>

				</section>

                <section class="heading-only">
                    <h2>Beware, Mutation! 👻</h2>
                </section>

				<section>
                    <h3>Mutation in function calls 🙀</h3>

					<p style="font-size:smaller;">An function can change the value of any object in its scope.</p>

					<pre><code data-trim data-noescape class="python">
					four = [1, 2, 3, 4]
					print(four[0])
					do_stuff_to(four)
					print(four[0])
					</code></pre>

					<p class="python-tutor-link">
						<a target="_blank" href="http://pythontutor.com/composingprograms.html#code=def%20do_stuff_to%28four%29%3A%0A%20%20%20%20%23%20What%20can%20we%20put%20here%3F%0A%20%20%20%20pass%0A%0Afour%20%3D%20%5B1,%202,%203,%204%5D%0Aprint%28four%5B0%5D%29%0Ado_stuff_to%28four%29%0Aprint%28four%5B0%5D%29&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor
						</a>
					</p>
					<br>

					<p style="font-size:smaller;">Even without arguments:</p>
					<pre><code data-trim data-noescape class="python">
					four = [1, 2, 3, 4]
					print(four[3])
					do_other_stuff()
					print(four[3])
					</code></pre>

					<p class="python-tutor-link">
						<a target="_blank" href="http://pythontutor.com/composingprograms.html#code=def%20do_other_stuff%28%29%3A%0A%20%20%20%20four%5B3%5D%20%3D%2099%0A%20%20%20%20%0Afour%20%3D%20%5B1,%202,%203,%204%5D%0Aprint%28four%5B3%5D%29%0Ado_other_stuff%28%29%0Aprint%28four%5B3%5D%29&cumulative=true&curInstr=0&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
						Try in PythonTutor
						</a>
					</p>

					<aside class="notes">

					</aside>

				</section>


                <section>
                    <h3>Immutability in function calls</h3>

                    <p>Immutable values are protected from mutation.</p>
                    <table style="margin:0">
                        <thead>
                            <tr>
                                <th style="width:50%">Tuple
                                <th>List
                        <tbody>
                            <tr>
                                <td>
                                <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                                turtle = (1, 2, 3)
                                ooze()
                                turtle # (1, 2, 3)
                                </code></pre>
                                <td>
                                <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                                turtle = [1, 2, 3]
                                ooze()
                                turtle # [1, 2, 'Mwahaha']
                                </code></pre>
                    </table>

                </section>


                <section>
                    <h3>Mutable default arguments 🙀</h3>

                    <p>A default argument value is part of a function value, <em>not</em> generated by a call.</p>

                    <pre style="font-size:0.8em;"><code data-trim data-noescape class="python">
                     def f(s=[]):
                        s.append(3)
                        return len(s)

                    f() # 1
                    f() # 2
                    f() # 3
                    </code></pre>

                    <p>Each time the function is called, <code>s</code> is bound to the same value.</p>

                    <p class="python-tutor-link">
                        <a target="_blank" href="https://pythontutor.com/composingprograms.html#code=def%20f%28s%3D%5B%5D%29%3A%0A%20%20%20%20s.append%283%29%0A%20%20%20%20return%20len%28s%29%0A%0Af%28%29%20%23%201%0Af%28%29%20%23%202%0Af%28%29%20%23%203&cumulative=true&curInstr=16&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
                        View in PythonTutor
                        </a>
                    </p>
                </section>

                <!--<section class="heading-only">
                    <h2>Mutable functions</h2>
                </section>

                <section>
                    <h3>A function with changing state</h3>

                    <p>Goal: Use a function to repeatedly withdraw from a bank account that starts with $100.</p>

                    <div class="fragment" data-fragment-index="4">
                    <p>What makes it possible?</p>
                    <pre style="font-size:0.7em"><code data-trim data-noescape class="python">
                    withdraw = make_withdraw_account(100) # Contains a list
                    </code></pre>
                    </div>

                    <div class="fragment" data-fragment-index="1">
                    <p>First call to the function:</p>
                    <pre style="font-size:0.7em"><code data-trim data-noescape class="python">
                    withdraw(25)      # 75
                    </code></pre>
                    </div>
                    
                    <div class="fragment" data-fragment-index="2">
                    <p>Second call to the function:</p>
                    <pre style="font-size:0.7em"><code data-trim data-noescape class="python">
                    withdraw(25)      # 50
                    </code></pre>
                    </div>

                    <div class="fragment" data-fragment-index="3">
                    <p>Third call to the function:</p>
                    <pre style="font-size:0.7em"><code data-trim data-noescape class="python">
                    withdraw(60)      # 'Insufficient funds'
                    </code></pre>
                    </div>

                </section>

                <section>
                    <h3>Implementing state in functions</h3>

                    <p>A mutable value in the parent frame can maintain
                        the local state for a function.</p>

                    <pre style="font-size:0.8em"><code data-trim data-noescape class="python">
                    def make_withdraw_account(initial):
                        balance = [initial]
                        
                        def withdraw(amount):
                            if balance[0] - amount < 0:
                                return 'Insufficient funds'
                            balance[0] -= amount
                            return balance[0]
                        
                        return withdraw
                    </code></pre>

                    <p class="python-tutor-link">
                        <a target="_blank" href="https://pythontutor.com/composingprograms.html#code=def%20make_withdraw_account%28initial%29%3A%0A%20%20%20%20balance%20%3D%20%5Binitial%5D%0A%20%20%20%20%0A%20%20%20%20def%20withdraw%28amount%29%3A%0A%20%20%20%20%20%20%20%20if%20balance%5B0%5D%20-%20amount%20%3C%200%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20'Insufficient%20funds'%0A%20%20%20%20%20%20%20%20balance%5B0%5D%20-%3D%20amount%0A%20%20%20%20%20%20%20%20return%20balance%5B0%5D%0A%20%20%20%20%0A%20%20%20%20return%20withdraw%0A%20%20%20%20%0Awithdraw%20%3D%20make_withdraw_account%28100%29%0Awithdraw%2825%29%0Awithdraw%2825%29&cumulative=true&curInstr=19&mode=display&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D">
                            View in PythonTutor
                        </a>
                    </p>

                </section>-->


                <section class="heading-only">
                    <h2>Python Project of The Day!</h2>
                </section>

                <section>
                    <h3>Anki</h3>

                    <p><a target="_blank" href="https://apps.ankiweb.net/index.html">Anki</a>: An open-source desktop application for studying flash cards.</p>
                    <img src="../images/anki_python.png" alt="Screenshot of Anki flash card" height="300">
                    <p class="smaller">Technologies used: Python.
                    <br>
                    (<a target="_blank" href="https://github.com/ankitects/anki">Github repository</a>)
                    </p>
                </section>

            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/dist/reveal.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/plugin/highlight/highlight.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/highlightjs-badge@0.1.9/highlightjs-badge.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/reveal.js-menu@2.1.0/menu.js"></script>
        <script>
            const srcUrlPrefix = "https://cdn.jsdelivr.net/npm/reveal.js@4.1.0/";
            Reveal.initialize({
                hash: true,
                center: false,
                slideNumber: true,
                showNotes: false,
                margin: 0.1,
                preloadIframes: true,
                plugins: [ RevealHighlight, RevealMenu ],
                pdfSeparateFragments: true
            });

            // add HighlightJS-badge (options are optional)
            var options = {
                copyIconContent: "📄",
                checkIconContent: "✅"
            };
            window.highlightJsBadge();

            if (window.location.search == "?print-pdf") {
                var uncounted = document.querySelectorAll("[data-visibility='uncounted']");
                uncounted.forEach(node => {
                    node.parentNode.classList.add("no-print")
                })
            }

        </script>
    </body>
</html>